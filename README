# Integration with polygon.io and Kendo UI for Angular

This solution is composed of multiple projects using a clean architecture design pattern. It includes a .NET 8 backend with a Web API and a Background worker, as well as an Angular 16 frontend. The backend communicates with a T-SQL database using Entity Framework Core with a code-first approach, and it integrates Hangfire for background processing.

## Solution Structure

- **Application**: Contains the business logic and application services.
- **Background**: A background worker project that uses Hangfire to handle scheduled and recurring tasks. This project is integrated with the Polygon.io API for job execution.
- **Client-App**: An Angular 16 frontend application used for managing clients, with features such as filtering, paging, and CRUD operations.
- **ClientCRUD**: A Web API built with .NET 8 that serves as the backend for the Client-App and provides endpoints for managing client data.
- **Domain**: Contains the core domain models and logic of the application.
- **Infrastructure**: Implements the infrastructure layer, including database access via Entity Framework Core, external service integrations, and the Hangfire setup.

## Prerequisites

1. **.NET 8 SDK**
2. **Node.js & npm**
3. **Angular CLI**
4. **SQL Server**
5. **Docker (Optional for containerization)**
6. **Hangfire (Configured in the Background project)**

## Setup Instructions

### Step 1: Clone the Repository

```bash
git clone <repository-url>
cd TechForceInterviewSolution
```
